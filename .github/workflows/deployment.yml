name: Deployment Workflow

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: pascalnehlsen/dice-app
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Create .env file from example.env and add GITHUB_SHA
        run: |
          cp ./example.env .env
          echo "GITHUB_SHA=${{ github.sha }}" >> .env

      - name: Build and push Docker image for backend
        id: backend-build-and-push
        uses: docker/build-push-action@v6.16.0
        with:
          context: ./
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/dice-app:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/dice-app:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/dice-app:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=common
          cache-to: type=gha,mode=max,scope=common

      - name: Upload artifacts (.env and docker-compose.yaml)
        uses: actions/upload-artifact@v4.6.2
        with:
          name: deployment-files
          path: |
            .env
            docker-compose.yml
          include-hidden-files: true
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Download deployment artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: |
            deployment-files

      - name: Copy artifact files via scp
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: '.env,docker-compose.yaml'
          target: ${{ secrets.TARGET }}
          overwrite: true

      - name: Run docker commands via ssh
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.TARGET }}
            docker compose down --remove-orphans
            docker system prune -af
            docker compose up -d
